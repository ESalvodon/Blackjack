{"version":3,"sources":["all-components.js"],"names":[],"mappings":"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","file":"all-components.js","sourcesContent":["/**\n * All components living under one roof for now.\n * TODO: Give them separate better homes :)\n */\n\nvar App = React.createClass({\n\n    /* Mixins info right away */\n    mixins: [CascadedMixin],\n\n    getInitialState:function(){\n\n        return {deck: [\n            {v:11,f:\"c1\"},{v:2,f:\"c2\"},{v:3,f:\"c3\"},{v:4,f:\"c4\"},{v:5,f:\"c5\"},{v:6,f:\"c6\"},\n            {v:7,f:\"c7\"},{v:8,f:\"c8\"},{v:9,f:\"c9\"},{v:10,f:\"c10\"},{v:10,f:\"c11\"},{v:10,f:\"c12\"},{v:10,f:\"c13\"},\n            {v:11,f:\"h1\"},{v:2,f:\"h2\"},{v:3,f:\"h3\"},{v:4,f:\"h4\"},{v:5,f:\"h5\"},{v:6,f:\"h6\"},\n            {v:7,f:\"h7\"},{v:8,f:\"h8\"},{v:9,f:\"h9\"},{v:10,f:\"h10\"},{v:10,f:\"h11\"},{v:10,f:\"h12\"},{v:10,f:\"h13\"},\n            {v:11,f:\"s1\"},{v:2,f:\"s2\"},{v:3,f:\"s3\"},{v:4,f:\"s4\"},{v:5,f:\"s5\"},{v:6,f:\"s6\"},\n            {v:7,f:\"s7\"},{v:8,f:\"s8\"},{v:9,f:\"s9\"},{v:10,f:\"s10\"},{v:10,f:\"s11\"},{v:10,f:\"s12\"},{v:10,f:\"s13\"},\n            {v:11,f:\"d1\"},{v:2,f:\"d2\"},{v:3,f:\"d3\"},{v:4,f:\"d4\"},{v:5,f:\"d5\"},{v:6,f:\"d6\"},\n            {v:7,f:\"d7\"},{v:8,f:\"d8\"},{v:9,f:\"d9\"},{v:10,f:\"d10\"},{v:10,f:\"d11\"},{v:10,f:\"d12\"},{v:10,f:\"d13\"}\n        ]\n\n        };\n\n    },\n\n    /* Shuffle the deck before passing it to the tables */\n    shuffleDeck : function(deck){\n        return _.shuffle(_.shuffle(_.shuffle(_.shuffle(deck))));\n    },\n\n    /* At this point we will just render ONE table for you to catch up with the tutorial */\n    /* We shuffle the deck and serve it to the table as a prop */\n    render: function() {\n        return (\n\n            <Table deck={this.shuffleDeck(this.state.deck)}/>\n\n        );\n    }\n\n});\n\n/* Mixins Demo */\n/* http://simblestudios.com/blog/development/react-mixins-by-example.html */\nvar UselessMixin = {\n    componentDidMount: function () {\n        console.log(\"Just mounted !\");\n    }\n};\n\nvar CascadedMixin = {\n    mixins: [UselessMixin]\n};\n\n\n/* We need cards, we got the images at the img/ directory and carefully named them the f value on the deck array */\n\nvar Card = React.createClass({\n\n    render: function() {\n        var bgUrl = (this.props.hidden)\n            ? 'url(images/hidden.png)'\n            : 'url(images/' + this.props.face + '.png)';\n        /* in react we pass the css properties as an object with camelCase variables referring to the respective CSS variables */\n        var cardStyle = {backgroundImage: bgUrl};\n\n        return (\n            <div className='card' style={cardStyle}/>\n        );\n    }\n\n});\n\n\nvar Hand = React.createClass({\n\n    getDefaultProps : function(){\n        return {\n            /* Default empty hand for the component */\n            hand : [],\n        }\n    },\n    render: function() {\n\n        return (\n            <div className='hand'>\n\n                {/* Example on how to use an IF/ELSE statement inside the return (jsx) function */}\n                {/* This will show an upside down card representing the deck on the dealer side of the table */}\n                {this.props.showDeck ? <Card hidden={true}/> : ''}\n\n                {/* here we iterate the hand array and serve the Card component with the card info */}\n                {this.props.hand.map(function(card,i){\n                    return <Card face={card.f} value={card.v} key={i}/>\n                })}\n\n            </div>\n        );\n    }\n\n});\n\nvar Outcome = React.createClass({\n\n    getDefaultProps : function(){\n        return {\n            status : \"playing\",\n        }\n    },\n    render: function() {\n        /* nothing fancy happening here , displaying a bootstrap alert representing the game status */\n        switch(this.props.status) {\n            case \"playing\":\n                return (<div className=\"alert alert-info\" role=\"alert\">Hit or Stand</div>);\n                break;\n            case \"win\":\n                return (<div className=\"alert alert-success\" role=\"alert\">You Win !!!</div>);\n                break;\n            case \"lose\":\n                return (<div className=\"alert alert-danger\" role=\"alert\">Dealer Wins :-( </div>);\n                break;\n            default:\n                return(<div className=\"alert alert-info\" role=\"alert\">Click Deal to Start ! </div>);\n                break;\n        }\n\n    }\n\n});\n\nvar Interface = React.createClass({\n\n    getDefaultProps : function(){\n        return {\n            status : \"new\"\n        }\n    },\n\n    render: function() {\n        return (\n            <div className='panel interface'>\n                {/* Outcome component child of Interface */}\n                <Outcome status={this.props.status}/>\n\n                <div className=\"btn-group btn-group-justified\" role=\"group\" aria-label=\"score\">\n                    <a className=\"btn btn-default\">Dealer Score : {this.props.dealerscore}</a>\n                    <a className=\"btn btn-default\">Player Score : {this.props.playerscore}</a>\n\n                </div>\n                <br/>\n\n                <div className=\"btn-group btn-group-justified\" role=\"group\" aria-label=\"game\">\n                    <div className=\"btn-group\" role=\"group\">\n                        {/* received as props to the Interface component the handleDeal function is now bound to the onClick event */}\n                        <button onClick={this.props.deal} type=\"button\" className=\"btn btn-info\">Deal</button>\n                    </div>\n                    <div className=\"btn-group\" role=\"group\">\n                        <button onClick={this.props.hit} type=\"button\" className=\"btn btn-success\">Hit</button>\n                    </div>\n                    <div className=\"btn-group\" role=\"group\">\n                        <button onClick={this.props.stand} type=\"button\" className=\"btn btn-danger\">Stand</button>\n                    </div>\n                </div>\n\n            </div>\n        );\n    }\n\n});\n\n\nvar Table = React.createClass({\n\n    getInitialState:function(){\n\n        // table deck shuffle\n        var shuffled = _.shuffle(this.props.deck);\n\n        return {\n            deck: shuffled,\n        };\n\n    },\n\n    /* function to compute the hand score */\n    handScore : function(hand){\n\n        var score = _.sum(hand,'v');\n\n        if(score > 21){\n            //check for aces\n            var aces = _.countBy(hand,{v:11}).true;\n            while (score > 21 && aces > 0){\n                score -= 10;\n                aces -=1;\n            }\n        }\n\n        return score;\n    },\n\n    /* function to handle the event of user clicking the Deal button */\n    handleDealButton :function(){\n\n        /* this variables are restrained to this closure and modifying state variables without the setState is prohibited */\n        var deck        = this.state.deck;\n        var playerhand  = [];\n        var dealerhand  = [];\n\n        //check deck size to see if we need to shuffle a new deck\n        if(deck.length < 5){\n            deck = _.shuffle(this.props.deck);\n        }\n\n        //player hand, deal 2 cards\n        playerhand.push(deck.pop());\n        playerhand.push(deck.pop());\n\n        //lets just burn a card\n        deck.pop();\n\n        //dealer card\n        //since we are using client side state the dealer secret card is only popped out of the deal at the time the user clicks Stand.\n        dealerhand.push(deck.pop());\n\n        //set the updates\n        this.setState({\n            player :  playerhand,\n            dealer : dealerhand,\n            deck : deck,\n            status : \"playing\"\n        });\n\n    },\n\n    /* function to handle the event of user clicking the Hit button */\n    handleHitButton : function(){\n\n        var newStatus = this.state.status;\n        var playerHand = this.state.player;\n\n        // check deck size to see if we need to shuffle a new deck\n        if(this.state.deck.length < 5){\n            this.state.deck = _.shuffle(this.props.deck);\n        }\n\n        // we shuffle every time so you don't cheat by checking component state :D\n        var shuffled = _.shuffle(this.state.deck);\n\n        // deal the card\n        playerHand.push(shuffled.pop());\n\n        var newPlayerscore = this.handScore(playerHand);\n\n        // five card charlie\n        if(newPlayerscore < 21 && playerHand.length == 5)\n            newStatus = \"win\";\n        if(newPlayerscore > 21)\n            newStatus = \"lose\";\n\n        // set the updates\n        this.setState({\n            player :  playerHand,\n            playerscore: newPlayerscore,\n            deck : shuffled,\n            status : newStatus\n        });\n\n    },\n\n    /* function to handle the event of user clicking the Stand button */\n    handleStandButton :function(){\n\n        // check deck size to see if we need to shuffle a new deck\n        var dealerHand = this.state.dealer;\n        var deck = this.state.deck;\n        if(deck.length < 5) {\n            deck = _.shuffle(this.props.deck);\n        }\n\n        // we shuffle every time so you don't cheat by checking component state :D\n        var shuffled = _.shuffle(deck);\n\n        // update scores for the interface component\n        var dealerScore = this.handScore(dealerHand);\n        var playerScore = this.handScore(this.state.player);\n        var dealerHasCharlie = false;\n\n        // compute game status while dealing cards to the dealer\n        while (dealerScore < playerScore || dealerScore <= 17) {\n\n            // deal a card\n            dealerHand.push(shuffled.pop());\n            dealerScore = this.handScore(dealerHand);\n\n            if(dealerScore < 21 && dealerHand.length == 5){\n                // five card charlie\n                dealerHasCharlie = true;\n                break;\n            }\n\n        }\n\n        // update the state variables accordingly\n        this.setState({\n            dealer :  dealerHand,\n            deck : shuffled,\n            // compute game status\n            status : (dealerScore < 21 || dealerHasCharlie) ? 'lose' : 'win'\n        });\n\n    },\n\n    /*\n\n     lets call for a Hand component for the dealer where we will show the deck of cards,\n     the user Interface component to display scores and buttons (that will trigger the game logic events)\n     and finaly another Hand component for the player\n\n     */\n    render: function() {\n        return (\n            <div className='table-board'>\n                <Hand\n                    showDeck={true}\n                    hand={this.state.dealer}\n                    />\n                <Interface\n                    playerscore={this.handScore(this.state.player)}\n                    dealerscore={this.handScore(this.state.dealer)}\n                    deal={this.handleDealButton}\n                    hit={this.handleHitButton}\n                    stand={this.handleStandButton}\n                    status={this.state.status}\n                    />\n                <Hand\n                    hand={this.state.player}\n                    />\n            </div>\n        );\n    }\n});\n"],"sourceRoot":"/source/"}